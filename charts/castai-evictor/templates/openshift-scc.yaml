{{- define "evictor.sccName" -}}
{{- printf "%s-scc" (include "evictor.fullname" .) -}}
{{- end -}}

{{- if .Capabilities.APIVersions.Has "security.openshift.io/v1" -}}
{{- if and .Values.securityContext .Values.containerSecurityContext }}

apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: {{ include "evictor.sccName" . }}
  labels:
    {{- include "evictor.labels" . | nindent 4 }}
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: {{ .Values.hostNetwork.enabled | default false }}
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: {{ .Values.containerSecurityContext.allowPrivilegeEscalation | default false }}
allowedCapabilities: []
defaultAddCapabilities: []
fsGroup:
  type: MustRunAs
  {{- if .Values.securityContext.fsGroup }}
  ranges:
  - min: {{ .Values.securityContext.fsGroup }}
    max: {{ .Values.securityContext.fsGroup }}
  {{- else }}
  {{- fail "SCC requires .Values.securityContext.fsGroup to be set for fsGroup.type MustRunAs" }}
  {{- end }}
readOnlyRootFilesystem: {{ .Values.containerSecurityContext.readOnlyRootFilesystem | default true }}
requiredDropCapabilities:
  {{- if and .Values.containerSecurityContext.capabilities .Values.containerSecurityContext.capabilities.drop }}
  {{- toYaml .Values.containerSecurityContext.capabilities.drop | nindent 2 }}
  {{- else }}
  []
  {{- end }}
runAsUser:
  type: MustRunAs
  {{- if .Values.securityContext.runAsUser }}
  uid: {{ .Values.securityContext.runAsUser }}
  {{- else }}
  {{- fail "SCC requires .Values.securityContext.runAsUser to be set for runAsUser.type MustRunAs" }}
  {{- end }}
seLinuxContext:
  type: RunAsAny
supplementalGroups:
  type: MustRunAs
  {{- if .Values.securityContext.runAsGroup }}
  ranges:
  - min: {{ .Values.securityContext.runAsGroup }}
    max: {{ .Values.securityContext.runAsGroup }}
  {{- else if .Values.securityContext.fsGroup }}
  ranges:
  - min: {{ .Values.securityContext.fsGroup }}
    max: {{ .Values.securityContext.fsGroup }}
  {{- else }}
  {{- fail "SCC requires .Values.securityContext.runAsGroup or .Values.securityContext.fsGroup for supplementalGroups.type MustRunAs" }}
  {{- end }}
volumes:
- configMap
- downwardAPI
- emptyDir
- projected
- secret
seccompProfiles:
  {{- if .Values.securityContext.seccompProfile }}
    {{- if eq (toString .Values.securityContext.seccompProfile.type) "RuntimeDefault" }}
  - runtime/default
    {{- else if eq (toString .Values.securityContext.seccompProfile.type) "Unconfined" }}
  - unconfined
    {{- else if .Values.securityContext.seccompProfile.type }}
  - {{ .Values.securityContext.seccompProfile.type }}
    {{- end }}
  {{- else }}
  - runtime/default
  {{- end }}
priority: 10

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "evictor.sccName" . }}-user
  labels:
    {{- include "evictor.labels" . | nindent 4 }}
rules:
- apiGroups: ["security.openshift.io"]
  resources: ["securitycontextconstraints"]
  verbs:     ["use"]
  resourceNames:
  - {{ include "evictor.sccName" . }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "evictor.sccName" . }}-binding
  labels:
    {{- include "evictor.labels" . | nindent 4 }}
subjects:
- kind: ServiceAccount
  name: {{ include "evictor.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ include "evictor.sccName" . }}-user
  apiGroup: rbac.authorization.k8s.io

{{- end }}{{/* End .Values.securityContext and .Values.containerSecurityContext check */}}
{{- end }}{{/* End .Capabilities.APIVersions.Has check */}}
