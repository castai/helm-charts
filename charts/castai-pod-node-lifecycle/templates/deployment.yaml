{{- if .Values.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pod-node-lifecycle.fullname" . }}
  labels:
  {{- include "pod-node-lifecycle.labels" . | nindent 4 }}
  annotations:
    "ignore-check.kube-linter.io/env-var-secret": >-
      Cert rotator ('github.com/open-policy-agent/cert-controller/pkg/rotator')
      is responsible for managing the secret, thus it needs a ref to the secret name.
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "pod-node-lifecycle.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.image.tag "latest" }}
      {{/* If we're running with `latest` tag, we force k8s to update the pod */}}
        "trigger-redeploy-hack": {{ now }}
      {{- end }}
      labels:
      {{- include "pod-node-lifecycle.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.hostNetwork.enabled }}
      hostNetwork: true
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClass.enabled }}
      priorityClassName: {{ .Values.priorityClass.name }}
      {{- end }}
      serviceAccountName: {{ include "pod-node-lifecycle.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ required "image.repository must be provided" .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WEBHOOK_NAME
              value: {{ include "pod-node-lifecycle.webhookName" . }}
            - name: SERVICE_NAME
              value: {{ include "pod-node-lifecycle.fullname" . }}
            - name: CERTS_SECRET_NAME
              value: {{ include "pod-node-lifecycle.certsSecretName" . }}
            {{- if .Values.telemetry.enabled }}
            - name: API_URL
              value: {{ required "api.url must be provided" .Values.api.url | quote }}
            - name: CLUSTER_ID
              value: {{ required "api.clusterId must be provided" .Values.api.clusterId }}
            {{- else }}
            - name: DISABLE_TELEMETRY
              value: "true"
            {{- end }}
            {{- if not .Values.metrics.enabled }}
            - name: METRICS_ADDRESS
              value: "0"
            {{- end }}
            - name: CONFIG_PATH
              value: /config/config.yaml
            - name: PORT
              value: {{ .Values.webhook.port | quote }}
          {{- if .Values.telemetry.enabled }}
          envFrom:
            - secretRef:
                {{- if .Values.api.keySecretRef }}
                name: {{ .Values.api.keySecretRef }}
                {{- else }}
                name: {{ include "pod-node-lifecycle.fullname" . }}-api
                {{- end }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.mainContainerSecurityContext | nindent 12 }}
          livenessProbe:
            httpGet:
              port: 9091
              path: /healthz
          readinessProbe:
            httpGet:
              port: 9091
              path: /readyz
          volumeMounts:
            - mountPath: /certs
              name: certs
              readOnly: true
            - mountPath: /config
              name: cfg
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.webhook.port }}
              {{- if .Values.hostNetwork.enabled }}
              hostPort: {{ .Values.webhook.port }}
              {{- end}}
              name: https
              protocol: TCP
            - name: healthz
              containerPort: 9091              
              protocol: TCP
      volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: {{ include "pod-node-lifecycle.certsSecretName" . }}
        - name: cfg
          configMap:
            defaultMode: 420
            name: {{ include "pod-node-lifecycle.configMapName" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
{{- end }}
{{- end }}
