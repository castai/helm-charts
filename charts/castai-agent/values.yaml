# Default values for castai-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2
namespace: "castai-agent"

# commonLabels -- Labels to add to all resources.
commonLabels: {}

# commonAnnotations -- Annotations to add to all resources.
commonAnnotations: {}

image:
  repository: us-docker.pkg.dev/castai-hub/library/agent
  pullPolicy: IfNotPresent

# imagePullSecrets -- what secret should be used for pulling the image
imagePullSecrets: {}

nameOverride: ""
fullnameOverride: castai-agent

# createNamespace -- Specifies whether a namespace should be created.
createNamespace: true

rbac:
  # rbac.enabled -- Specifies whether a Clusterrole should be created.
  enabled: true
  # rbac.configmapsReadAccessNamespaces -- Namespaces to be granted access to the castai-agent for configmaps read access.
  configmapsReadAccessNamespaces:
    - "kube-system"

serviceAccount:
  # serviceAccount.create -- Specifies whether a service account should be created.
  create: true
  # serviceAccount.annotations -- Annotations to add to the service account.
  annotations: {}
  # serviceAccount.name -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template.
  name: ""

# podAnnotations -- Annotations to be added to agent pods.
podAnnotations: {}

# podLabels -- Labels to be added to agent pods.
podLabels: {}

# clusterVPA -- Cluster proportional vertical autoscaler for the agent deployment
# https://github.com/kubernetes-sigs/cluster-proportional-vertical-autoscaler.
clusterVPA:
  repository: "registry.k8s.io/cpa/cpvpa"
  enabled: true
  version: v0.8.4
  pollPeriodSeconds: 300
  resources: {}

resources:
  requests:
    cpu: 100m
    memory: 128Mi

monitor:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

additionalEnv:
  PPROF_PORT: "6060"

additionalSecretEnv: {}

# apiURL -- URL to the CAST AI API server.
apiURL: "https://api.cast.ai"

# apiKey -- Token to be used for authorizing agent access to the API.
apiKey: ""

# apiKeySecretRef -- Name of secret with Token to be used for authorizing agent access to the API
# apiKey and apiKeySecretRef are mutually exclusive
# The referenced secret must provide the token in .data["API_KEY"].
apiKeySecretRef: ""

# trustedCACert -- CA certificate to add to agent's set of root certificate authorities that client will use when verifying server certificates.
trustedCACert: ""

# trustedCACertSecretRef -- Name of secret with CA certificate to be added to agent's set of root certificate authorities.
# trustedCACert and trustedCACertSecretRef are mutually exclusive.
# The referenced secret must provide the certificate in .data["TLS_CA_CERT_FILE"].
trustedCACertSecretRef: ""

# provider -- Name of the Kubernetes service provider
# one of: "eks", "gke", "aks", "kops", "anywhere".
provider: ""

# allowReadIngress -- Allow to read ingress resources. Needed for k8s security and compliance.
allowReadIngress: true
# allowReadRBAC -- Allow to read rbac resources. Required for security and k8s compliance reporting.
allowReadRBAC: true

priorityClass:
  enabled: true
  name: system-cluster-critical

hostNetwork:
  # Enable host networking
  enabled: false

# DNS Policy Override - Needed when using some custom CNI's.
dnsPolicy: ""

# Pod toleration rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: {}

# Pod node selector rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
nodeSelector: {}

# Pod affinity rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: NotIn
              values:
                - windows
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
            - key: provisioner.cast.ai/managed-by
              operator: In
              values:
                - cast.ai

# Pod security context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
securityContext:
  runAsNonRoot: true
  fsGroup: 65532
  runAsGroup: 65532
  runAsUser: 65532
  seccompProfile:
    type: RuntimeDefault


# Container security context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: ScheduleAnyway
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: castai-agent

metadataStore:
  # metadataStore.enabled -- specifies whether agent should store metadata in a config map
  enabled: false
  # metadataStore.configMapName -- name of config map to store metadata
  configMapName: castai-agent-metadata
  # metadataStore.configMapName -- namespace of config map to store metadata
  configMapNamespace: castai-agent

# -- Used to set additional environment variables for the pod-mutator container via configMaps or secrets.
envFrom: []
