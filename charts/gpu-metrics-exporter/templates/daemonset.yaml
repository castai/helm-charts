apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "gpu-metrics-exporter.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gpu-metrics-exporter.labels" . | nindent 4 }}
  {{- if .Values.dcgmExporter.enabled }}
  annotations:
    ignore-check.kube-linter.io/privileged-container: "This daemon set needs to run DCGM Exporter as privileged to access the GPU metrics."
    ignore-check.kube-linter.io/run-as-non-root: "This daemon set needs to run DCGM Exporter as root to access the GPU metrics."
    ignore-check.kube-linter.io/privilege-escalation-container: "This daemon set needs escalate privileges for DCGM Exporter."
    ignore-check.kube-linter.io/no-read-only-root-fs: "This daemon set needs to run DCGM Exporter with read-only root filesystem."
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "gpu-metrics-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gpu-metrics-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq (required ".Values.provider is required (gke|eks|aks)" .Values.provider) "eks" }}
      priorityClassName: system-node-critical
      {{- end }}
      serviceAccountName: {{ include "gpu-metrics-exporter.serviceAccountName" . }}
      {{- if .Values.dcgmExporter.enabled }}
      volumes:
        - name: "pod-gpu-resources"
          hostPath:
            path: /var/lib/kubelet/pod-resources
        - name: {{- include "dcgm-exporter.config-map" . | indent 1 }}
          configMap:
            name: {{- include "dcgm-exporter.config-map" . | indent 1 }}
        {{- if eq .Values.provider "gke" }}
        - name: "nvidia-install-dir-host"
          hostPath:
            path: /home/kubernetes/bin/nvidia
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.provider "gke"}}
      {{- with .Values.gke.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end}}
      {{- with .Values.gpuMetricsExporter.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: castai-gpu-metrics-exporter
          securityContext:
          {{- toYaml .Values.gpuMetricsExporter.securityContext | nindent 12 }}
          image: "{{ .Values.gpuMetricsExporter.image.repository }}:{{ .Values.gpuMetricsExporter.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.gpuMetricsExporter.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.gpuMetricsExporter.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          envFrom:
            - configMapRef:
                name: {{- include "gpu-metrics-exporter.config-map" . | indent 1}}
          env:
            - name: "NODE_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: "API_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ include "gpu-metrics-exporter.fullname" . }}
                  key: API_KEY
          {{- if .Values.dcgmExporter.enabled }}
            - name: "DCGM_HOST"
              value: "localhost"
          {{- end }}
          resources:
            {{- toYaml .Values.gpuMetricsExporter.resources | nindent 12 }}
        {{- if .Values.dcgmExporter.enabled }}
        - name: dcgm-exporter
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
              drop:
                - NET_RAW
            runAsNonRoot: false
            runAsUser: 0
            {{- if eq .Values.provider "gke"}}
            privileged: true
            {{- end }}
          image: "{{ .Values.dcgmExporter.image.repository }}:{{ .Values.dcgmExporter.image.tag }}"
          imagePullPolicy: {{ .Values.dcgmExporter.image.pullPolicy }}
          command: [ "/bin/bash", "-c" ]
          args:
          {{- if eq .Values.provider "gke"}}
            {{- if .Values.dcgmExporter.useExternalHostEngine }}
            - hostname $NODE_NAME; dcgm-exporter --remote-hostengine-info $(NODE_IP) -f /etc/dcgm-exporter/counters.csv
            {{- else }}
            - hostname $NODE_NAME; dcgm-exporter -f /etc/dcgm-exporter/counters.csv
            {{- end }}
          {{- else }}
            {{- if .Values.dcgmExporter.useExternalHostEngine }}
            - hostname $NODE_NAME; for ((;;)) { r=$(dcgm-exporter --remote-hostengine-info $(NODE_IP) -f /etc/dcgm-exporter/counters.csv); echo "dcgm-exporter could not run"; sleep 60 ; }
            {{- else }}
            - hostname $NODE_NAME; for ((;;)) { r=$(dcgm-exporter -f /etc/dcgm-exporter/counters.csv); echo "dcgm-exporter could not run"; sleep 60 ; }
            {{- end }}
          {{- end }}
          ports:
            - name: "metrics"
              containerPort: 9400
          env:
            - name: "DCGM_EXPORTER_KUBERNETES"
              value: "true"
            - name: "DCGM_EXPORTER_LISTEN"
              value: ":9400"
            - name: "DCGM_EXPORTER_INTERVAL"
              value: "5000"
            - name: "NODE_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- if eq .Values.provider "gke" }}
            - name: "NODE_IP"
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: "LD_LIBRARY_PATH"
              value: "/usr/local/nvidia/lib64"
            - name: "DCGM_EXPORTER_KUBERNETES_GPU_ID_TYPE"
              value: "device-name"
            {{- end }}
          volumeMounts:
            - name: "pod-gpu-resources"
              readOnly: true
              mountPath: "/var/lib/kubelet/pod-resources"
            {{- if eq .Values.provider "gke" }}
            - name: "nvidia-install-dir-host"
              mountPath: /usr/local/nvidia
            {{- end }}
            - name: {{- include "dcgm-exporter.config-map" . | indent 1 }}
              mountPath: "/etc/dcgm-exporter"
        {{- end }}
