apiVersion: apps/v1
kind: Deployment
metadata:
  name: castai-cluster-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "castai-agent.labels" . | nindent 4 }}
  annotations:
    ignore-check.kube-linter.io/no-read-only-root-fs: "This deployment writes to local fs during chart upsert actions."
    {{- include "castai-agent.annotations" . | nindent 4 }}
spec:
  {{- if .Values.leaderElectionEnabled }}
  replicas: {{ .Values.replicas }}
  strategy:
    {{- .Values.updateStrategy | toYaml | nindent 4 }}
  {{- else}}
  replicas: 1
  strategy:
    type: Recreate
  {{- end}}
  selector:
    matchLabels:
      {{- include "castai-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "castai-agent.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        kubectl.kubernetes.io/default-container: "cluster-controller"
        kubectl.kubernetes.io/default-exec-container: "cluster-controller"
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
      {{- if (.Values.aks | default dict ).enabled }}
        scheduling.cast.ai/lifecycle: "on-demand"
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.hostNetwork.enabled }}
      hostNetwork: true
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      volumes:
        - name: shared-metadata
          emptyDir:
            sizeLimit: 10Mi
      {{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1") (semverCompare ">= 1.18-0" .Capabilities.KubeVersion.Version) (.Values.priorityClass | default dict).enabled }}
      priorityClassName: {{ .Values.priorityClass.name }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
          {{- with .Values.affinity.nodeAffinity }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- if not .Values.enableTopologySpreadConstraints }}
        podAntiAffinity:
          {{- with .Values.affinity.podAntiAffinity }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- end }}
      {{- if .Values.enableTopologySpreadConstraints }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
       {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      securityContext:
      {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: cluster-controller
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: shared-metadata
              mountPath: /controller-metadata
          env:
          {{- if .Values.leaderElectionEnabled }}
            - name: LEADER_ELECTION_ENABLED
              value: "true"
            - name: LEADER_ELECTION_LOCK_NAME
              value: "cluster-controller"
            - name: LEADER_ELECTION_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LEADER_ELECTION_LEASE_DURATION
              value: "{{ .Values.leaderElectionLeaseDuration }}"
            - name: LEADER_ELECTION_LEASE_RENEW_DEADLINE
              value: "{{ .Values.leaderElectionRenewDeadline }}"
          {{- end }}
          {{- if .Values.k8sApiClient.rateLimit.burst }}
            - name: KUBECLIENT_BURST
              value: {{ .Values.k8sApiClient.rateLimit.burst | quote }}
          {{- end }}
          {{- if .Values.k8sApiClient.rateLimit.qps }}
            - name: KUBECLIENT_QPS
              value: {{ .Values.k8sApiClient.rateLimit.qps | quote }}
          {{- end }}
          {{- if not .Values.autoscaling.enabled }}
            - name: AUTOSCALING_DISABLED
              value: "true"
          {{- end }}
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: KUBERNETES_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- range $k, $v := .Values.additionalEnv }}
            - name: {{ $k }}
              value: "{{ $v }}"
          {{- end }}
          {{- if .Values.castai.clusterIdSecretKeyRef.name }}
            {{- if and (ne .Values.castai.clusterID "") (ne .Values.clusterID "") }}
            {{- fail "clusterID and clusterIdSecretKeyRef are mutually exclusive" }}
            {{- end }}
            - name: CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: {{ required "clusterID or clusterIdSecretKeyRef must be provided" .Values.castai.clusterIdSecretKeyRef.name }}
                  key: {{ .Values.castai.clusterIdSecretKeyRef.key }}
          {{- else if and (not .Values.castai.clusterID) (not .Values.envFrom) }}
            {{- fail "either clusterID or clusterIdSecretKeyRef must be provided" }}
          {{- end }}
          envFrom:
          {{- if .Values.trustedCACert }}
            - secretRef:
                name: {{ include "castai-agent.fullname" . }}-tls-cert
          {{- else if .Values.trustedCACertSecretRef }}
            - secretRef:
                name: {{ .Values.trustedCACertSecretRef -}}
          {{- end }}
          {{- if or .Values.apiKey .Values.castai.apiKey .Values.castai.apiKeySecretRef }}
            - secretRef:
                {{- if or .Values.apiKey .Values.castai.apiKey }}
                  {{- if ne .Values.castai.apiKeySecretRef "" }}
                  {{- fail "apiKey and apiKeySecretRef are mutually exclusive" }}
                  {{- end }}
                name: castai-cluster-controller
                {{- else }}
                name: {{ required "apiKey or apiKeySecretRef must be provided" .Values.castai.apiKeySecretRef }}
                {{- end }}
          {{- else if not .Values.envFrom }}
          {{- fail "castai.apiKey or castai.apiKeySecretRef must be provided" }}
          {{- end }}
            - configMapRef:
                name: castai-cluster-controller
          {{- with .Values.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 6060
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /healthz
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              port: http
              path: /healthz
            initialDelaySeconds: 5
            periodSeconds: 5
        - name: monitor
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - castai-cluster-controller
            - monitor
          volumeMounts:
            - name: shared-metadata
              mountPath: /controller-metadata
          env:
          {{- if .Values.leaderElectionEnabled }}
            - name: LEADER_ELECTION_ENABLED
              value: "true"
            - name: LEADER_ELECTION_LOCK_NAME
              value: "cluster-controller"
            - name: LEADER_ELECTION_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LEADER_ELECTION_LEASE_DURATION
              value: "{{ .Values.leaderElectionLeaseDuration }}"
            - name: LEADER_ELECTION_LEASE_RENEW_DEADLINE
              value: "{{ .Values.leaderElectionRenewDeadline }}"
          {{- end }}
          {{- if .Values.k8sApiClient.rateLimit.burst }}
            - name: KUBECLIENT_BURST
              value: {{ .Values.k8sApiClient.rateLimit.burst | quote }}
          {{- end }}
          {{- if .Values.k8sApiClient.rateLimit.qps }}
            - name: KUBECLIENT_QPS
              value: {{ .Values.k8sApiClient.rateLimit.qps | quote }}
          {{- end }}
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: KUBERNETES_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- range $k, $v := .Values.additionalEnv }}
            - name: {{ $k }}
              value: "{{ $v }}"
          {{- end }}
          {{- if .Values.castai.clusterIdSecretKeyRef.name }}
            {{- if and (ne .Values.castai.clusterID "") (ne .Values.clusterID "") }}
            {{- fail "clusterID and clusterIdSecretKeyRef are mutually exclusive" }}
            {{- end }}
            - name: CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: {{ required "clusterID or clusterIdSecretKeyRef must be provided" .Values.castai.clusterIdSecretKeyRef.name }}
                  key: {{ .Values.castai.clusterIdSecretKeyRef.key }}
          {{- else }}
            {{- if and (not .Values.castai.clusterID) (not .Values.envFrom) }}
            {{- fail "either clusterID or clusterIdSecretKeyRef must be provided" }}
            {{- end }}
          {{- end }}
          envFrom:
          {{- if .Values.trustedCACert }}
            - secretRef:
                name: {{ include "castai-agent.fullname" . }}-tls-cert
          {{- else if .Values.trustedCACertSecretRef }}
            - secretRef:
                name: {{ .Values.trustedCACertSecretRef -}}
          {{- end }}
          {{- if or .Values.apiKey .Values.castai.apiKey .Values.castai.apiKeySecretRef }}
            - secretRef:
                {{- if or .Values.apiKey .Values.castai.apiKey }}
                  {{- if ne .Values.castai.apiKeySecretRef "" }}
                  {{- fail "apiKey and apiKeySecretRef are mutually exclusive" }}
                  {{- end }}
                name: castai-cluster-controller
                {{- else }}
                name: {{ required "apiKey or apiKeySecretRef must be provided" .Values.castai.apiKeySecretRef }}
                {{- end }}
          {{- else if not .Values.envFrom }}
          {{- fail "castai.apiKey or castai.apiKeySecretRef must be provided" }}
          {{- end }}
            - configMapRef:
                name: castai-cluster-controller
          {{- with .Values.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- .Values.monitor.resources | default dict | toYaml | nindent 12 }}
