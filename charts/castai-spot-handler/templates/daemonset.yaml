apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: castai-spot-handler
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "castai-agent.labels" . | nindent 4 }}
  annotations:
    ignore-check.kube-linter.io/host-network: "Spot handler need host network to access instance metadata endpoints for spot interrupts checks."
    {{- include "castai-agent.annotations" . | nindent 4 }}
spec:
  updateStrategy:
    {{- .Values.updateStrategy | toYaml | nindent 4 }}
  selector:
    matchLabels:
      name: spot-handler
  template:
    metadata:
      labels:
        name: spot-handler
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
     {{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1") (semverCompare ">= 1.18-0" .Capabilities.KubeVersion.Version) .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | trim | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: {{ .Values.useHostNetwork }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
      {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: spot-handler
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: API_URL
              value: {{ required "castai.apiURL must be provided" .Values.castai.apiURL | quote }}
          {{- if .Values.castai.clusterID }}
            {{- if ne .Values.castai.clusterIdSecretKeyRef.name "" }}
            {{- fail "clusterID and clusterIdSecretKeyRef are mutually exclusive" }}
            {{- end }}
            - name: CLUSTER_ID
              value: {{ required "castai.clusterID must be provided" .Values.castai.clusterID | quote }}
          {{- else }}
            {{- if .Values.castai.clusterIdSecretKeyRef.name }}
            - name: CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.castai.clusterIdSecretKeyRef.name }}
                  key: {{ .Values.castai.clusterIdSecretKeyRef.key }}
            {{- else if not .Values.envFrom}}
            {{- fail "either clusterID or clusterIdSecretKeyRef must be provided" }}
            {{- end }}
          {{- end }}
            - name: PROVIDER
              value: {{ required "castai.provider must be provided" .Values.castai.provider | quote }}
            {{- range $k, $v := .Values.additionalEnv }}
            - name: {{ $k }}
              value: "{{ $v }}"
            {{- end }}
          envFrom:
          {{- if .Values.trustedCACert }}
            - secretRef:
                name: {{ include "castai-agent.fullname" . }}-tls-cert
          {{- else if .Values.trustedCACertSecretRef }}
            - secretRef:
                name: {{ .Values.trustedCACertSecretRef -}}
          {{- end }}
            - secretRef:
                {{- if .Values.apiKeySecretRef }}
                name: {{ .Values.apiKeySecretRef }}
                {{- else }}
                # Re-use shared secret from cluster-controller.
                name: castai-cluster-controller
                {{- end }}
          {{- with .Values.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            readOnlyRootFilesystem: true
      terminationGracePeriodSeconds: 30
