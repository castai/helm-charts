# Default values for castai-spot-handler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# commonLabels -- Labels to add to all resources.
commonLabels: {}

# commonAnnotations -- Annotations to add to all resources.
commonAnnotations: {}

image:
  repository: us-docker.pkg.dev/castai-hub/library/spot-handler
  # Tag is set using Chart.yaml appVersion field.
  tag: ""
  pullPolicy: IfNotPresent

# imagePullSecrets -- what secret should be used for pulling the image
imagePullSecrets: {}


# trustedCACert -- CA certificate to add to the set of root certificate authorities that the client will use when verifying server certificates.
trustedCACert: ""

# trustedCACertSecretRef -- Name of secret with CA certificate to be added to the set of root certificate authorities that the client will use when verifying server certificates.
# trustedCACert and trustedCACertSecretRef are mutually exclusive.
# The referenced secret must provide the certificate in .data["TLS_CA_CERT_FILE"].
trustedCACertSecretRef: ""

castai:
  # castai.apiURL -- CASTAI public api url.
  apiURL: "https://api.cast.ai"

  # castai.clusterID -- CASTAI Cluster unique identifier.
  # castai.clusterID and castai.clusterIdSecretKeyRef are mutually exclusive
  clusterID: ""
  # clusterIdSecretKeyRef -- Name of secret with ClusterID
  # The referenced secret must provide the ClusterID in .data[<<.Values.castai.clusterIdSecretKeyRef.key>>]
  clusterIdSecretKeyRef:
    name: ""
    key: "CLUSTER_ID"

  # castai.provider -- Cloud provider (azure, gcp, aws).
  provider: ""

podAnnotations: {}
podLabels: {}
additionalEnv:
  LOG_LEVEL: "5"
  POLL_INTERVAL_SECONDS: "3"

# useHostNetwork -- Host network is used to access instance metadata endpoints which are not always available from pod network.
useHostNetwork: true

# updateStrategy -- Controls `daemonset.spec.updateStrategy` field.
updateStrategy: {}

resources:
  requests:
    cpu: 20m
    memory: 25Mi
  limits:
    memory: 25Mi

rbac:
  enabled: true

priorityClassName: "system-cluster-critical"

serviceAccount:
  # serviceAccount.annotation -- Annotations to add to the service account.
  annotations: {}
  name: castai-spot-handler

# Pod toleration rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations:
  - operator: Exists
    effect: NoSchedule

# Pod node selector rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
nodeSelector:
  scheduling.cast.ai/spot: "true"

# Pod affinity rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: NotIn
              values:
                - windows
# Pod security context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  runAsNonRoot: true
  fsGroup: 1003
  runAsGroup: 1003
  runAsUser: 1003

# apiKeySecretRef -- Name of secret with Token to be used for authorizing access to the API
# The referenced secret must provide the token in .data["API_KEY"]
apiKeySecretRef: ""

# -- Used to set additional environment variables for the spot handler container via configMaps or secrets.
envFrom: []
