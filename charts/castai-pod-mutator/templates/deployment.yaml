apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pod-mutator.fullname" . }}
  labels:
  {{- include "pod-mutator.labels" . | nindent 4 }}
  annotations:
    ignore-check.kube-linter.io/env-var-secret: "Linter may complain about CERTS_SECRET, which is NOT a secret value. CERTS_SECRET contains a resource name used by Cert Rotator."
    {{- include "pod-mutator.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "pod-mutator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
      {{- include "pod-mutator.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.priorityClass.enabled }}
      priorityClassName: {{ .Values.priorityClass.name }}
      {{- end }}
      serviceAccountName: {{ template "pod-mutator.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      {{- end }}
      {{- if or .Values.dnsPolicy .Values.hostNetwork  }}
      dnsPolicy: {{ or .Values.dnsPolicy "ClusterFirstWithHostNet" }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ required "image.repository must be provided" .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WEBHOOK_NAME
              value: {{ include "pod-mutator.webhookName" . }}
            - name: SERVICE_NAME
              value: {{ include "pod-mutator.fullname" . }}
            - name: LOG_LEVEL
              value: "0"
            - name: CERTS_ROTATION
              value: "true"
            - name: CERTS_SECRET
              value: {{ include "pod-mutator.certsSecretName" . }}
            {{- range $name, $value := .Values.additionalEnv }}
            - name: "{{ $name }}"
              value: "{{ $value }}"
            {{- end }}
          {{- if .Values.castai.organizationIdSecretKeyRef.name }}          
            {{- if ne .Values.castai.organizationID "" }}
            {{- fail "organizationID and organizationIdSecretKeyRef are mutually exclusive" }}
            {{- end }}

            {{- if ne .Values.castai.configMapRef "" }}
            {{- fail "configMapRef and organizationIdSecretKeyRef are mutually exclusive" }}
            {{- end }}
            - name: ORGANIZATION_ID
              valueFrom:
                secretKeyRef:
                  name: {{ required "organizationID or organizationIdSecretKeyRef must be provided" .Values.castai.organizationIdSecretKeyRef.name }}
                  key: {{ .Values.castai.organizationIdSecretKeyRef.key }}
          {{- else }}
            {{- if and (not .Values.castai.organizationID) (not .Values.castai.configMapRef) }}
            {{- fail "either organizationID configMapRef or organizationIdSecretKeyRef must be provided" }}
            {{- end }}
          {{- end }}
          {{- if .Values.castai.clusterIdSecretKeyRef.name }}          
            {{- if ne .Values.castai.clusterID "" }}
            {{- fail "clusterID and clusterIdSecretKeyRef are mutually exclusive" }}
            {{- end }}

            {{- if ne .Values.castai.configMapRef "" }}
            {{- fail "configMapRef and clusterIdSecretKeyRef are mutually exclusive" }}
            {{- end }}
            - name: CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: {{ required "clusterID or clusterIdSecretKeyRef must be provided" .Values.castai.clusterIdSecretKeyRef.name }}
                  key: {{ .Values.castai.clusterIdSecretKeyRef.key }}
          {{- else }}
            {{- if and (not .Values.castai.clusterID) (not .Values.castai.configMapRef) }}
            {{- fail "either clusterID configMapRef or clusterIdSecretKeyRef must be provided" }}
            {{- end }}
          {{- end }}
          envFrom:
            - secretRef:
                {{- if .Values.castai.apiKey }}
                  {{- if ne .Values.castai.apiKeySecretRef "" }}
                  {{- fail "apiKey and apiKeySecretRef are mutually exclusive" }}
                  {{- end }}
                name: pod-mutator
                {{- else }}
                name: {{ required "apiKey or apiKeySecretRef must be provided" .Values.castai.apiKeySecretRef }}
                {{- end }}
            {{- if or .Values.castai.apiUrl .Values.castai.organizationID .Values.castai.clusterID .Values.castai.configMapRef }}
            - configMapRef:
              {{- if .Values.castai.configMapRef }}
                name: {{ .Values.castai.configMapRef }}
              {{- else }}
                name: pod-mutator
              {{- end }}
            {{- end }}
          {{- with .Values.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /certs
              name: certs
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: {{ include "pod-mutator.certsSecretName" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
          {{- with .Values.affinity.nodeAffinity }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- if not .Values.enableTopologySpreadConstraints }}
        podAntiAffinity:
          {{- with .Values.affinity.podAntiAffinity }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- end }}
      {{- if .Values.enableTopologySpreadConstraints }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
       {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
{{- end }}
