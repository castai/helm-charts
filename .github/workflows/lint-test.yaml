name: Lint and Test Charts

on: pull_request

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.17.0

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Scan repo with kube-linter
        uses: stackrox/kube-linter-action@v1.0.4
        with:
          directory: charts
          config: kube-linter-config.yaml
          format: plain
          version: v0.6.7

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: ct lint --debug --config ct.yaml

      - name: Lint Code Base
        uses: docker://github/super-linter:v3.12.0
        env:
          # Do not lint cnab-config/castai-agent/mainTemplate.json until super-linter is upgraded to recent version.
          # v3.12.0 does not support Azure ARM API newer than 2022-05-01.
          FILTER_REGEX_EXCLUDE: .*(README\.md|Chart\.yaml|NOTES.txt|lint-test\.yaml|mainTemplate\.json).*
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_KUBERNETES_KUBEVAL: false
          VALIDATE_YAML: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create kind cluster
        uses: helm/kind-action@v1.12.0
        with:
          config: kind.yaml
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        run: ct install --config ct.yaml
